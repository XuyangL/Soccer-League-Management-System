/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.Club.Club;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.League.League;
import Business.Match.Match;
import Business.Organization.Organization;
import Business.Personnel.Personnel;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author lixuy
 */
public class LoginJPanel extends javax.swing.JPanel {

    private EcoSystem system;
    private DB4OUtil dB4OUtil;
    private JPanel container;
    private Icon wallpaper;

    /**
     * Creates new form LoginJPanel
     *
     * @param system
     * @param dB4OUtil
     * @param container
     */
    public LoginJPanel(EcoSystem system, DB4OUtil dB4OUtil, JPanel container) {
        initComponents();
        this.system = system;
        this.dB4OUtil = dB4OUtil;
        this.container = container;
        this.setBackground(new ImageIcon("bg/bg1.jpg"));
    }

    public void StoreDB() {
        dB4OUtil.storeSystem(system);
    }

    @Override
    protected void paintComponent(Graphics g) {
        if (null != wallpaper) {
            processBackground(g);
        }
    }

    private void setBackground(Icon wallpaper) {
        this.wallpaper = wallpaper;
        this.repaint();
    }

    private void processBackground(Graphics g) {
        ImageIcon icon = (ImageIcon) wallpaper;
        Image image = icon.getImage();
        int cw = getWidth();
        int ch = getHeight();
        int iw = image.getWidth(this);
        int ih = image.getHeight(this);
        int x = 0;
        int y = 0;
        while (y <= ch) {
            g.drawImage(image, x, y, this);
            x += iw;
            if (x >= cw) {
                x = 0;
                y += ih;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        userNameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        loginBtn = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setText("Welcome to Soccer League Management System !");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel1);
        jLabel1.setBounds(77, 6, 764, 43);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(245, 51, 0));
        jLabel2.setText("User Name :");
        add(jLabel2);
        jLabel2.setBounds(110, 90, 97, 21);

        userNameJTextField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        userNameJTextField.setForeground(new java.awt.Color(245, 51, 0));
        add(userNameJTextField);
        userNameJTextField.setBounds(250, 90, 233, 33);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(245, 51, 0));
        jLabel3.setText("Password :");
        add(jLabel3);
        jLabel3.setBounds(110, 140, 85, 21);

        passwordField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        passwordField.setForeground(new java.awt.Color(245, 51, 0));
        add(passwordField);
        passwordField.setBounds(250, 130, 233, 33);

        loginBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(245, 51, 0));
        loginBtn.setText("Login");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });
        add(loginBtn);
        loginBtn.setBounds(110, 210, 89, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:

        String userName = userNameJTextField.getText();
        // Get Password
        char[] passwordCharArray = passwordField.getPassword();
        String password = String.valueOf(passwordCharArray);

        UserAccount userAccount = null;

        //Step1: Check in the soccer assocication and Referee
        for (Organization organization : system.getOrganizationDirectory().getOrganizationList()) {
            userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
            if (userAccount != null) {
                break;
            }
        }

        Club inClub = null;
        Organization inOrganization = null;

        if (userAccount == null) {
            //Step 2: Go inside each club and check each organization
            for (Club club : system.getClubDirectory().getClubList()) {
                for (Organization organization : club.getOrganizationDirectory().getOrganizationList()) {
                    userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                    if (userAccount != null) {
                        inClub = club;
                        inOrganization = organization;
                        break;
                    }
                }

                if (userAccount != null) {
                    break;
                }
            }
        }

        if (userAccount == null) {
            JOptionPane.showMessageDialog(null, "Invalid credentials");
            this.setBackground(new ImageIcon("bg/bg" + (new Random().nextInt(3) + 1) + ".jpg"));
            return;
        } else {
            CardLayout layout = (CardLayout) container.getLayout();
            container.add("WorkAreaFrame", new WorkAreaFrameJPanel(container, userAccount, inOrganization, inClub, system));
            layout.next(container);
        }

        userNameJTextField.setText("");
        passwordField.setText("");
    }//GEN-LAST:event_loginBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField userNameJTextField;
    // End of variables declaration//GEN-END:variables
}
