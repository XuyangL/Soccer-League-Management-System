/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SoccerAssociationRole;

import Business.EcoSystem;
import Business.League.League;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lixuy
 */
public class ManageLeagueAndMatchJPanel extends javax.swing.JPanel {

    private JPanel container;
    private EcoSystem system;
    /**
     * Creates new form ManageLeagueAndClubJPanel
     */

    ManageLeagueAndMatchJPanel(JPanel container, EcoSystem system) {
        
        initComponents();
        this.container = container;
        this.system = system;
        populateTable();
    }

    public void populateTable() {
        
        DefaultTableModel dtm = (DefaultTableModel)jTable.getModel();
        dtm.setRowCount(0);

       // System.out.println(leagueDirectory);
        
           for( League league: system.getLeagueDirectory().getLeagueList()) 
           {
             Object[] row = new Object[5];
             row[0] = league.getLeagueID();
             row[1] = league;
             row[2] = league.getRank();   
             row[3] = league.getClubDirectory().getClubList().size(); 
             
             if(league.getMatchDayDirectory().getMatchDayList().isEmpty())
               row[4] = "No";
             else row[4] = "Yes";
             
             dtm.addRow(row);      
           
         }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        createLeagueBtn = new javax.swing.JButton();
        manageMatchBtn = new javax.swing.JButton();
        addClubBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LeagueID", "League Name", "Type", "Club Number", "Matches Created"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setResizable(false);
            jTable.getColumnModel().getColumn(1).setResizable(false);
            jTable.getColumnModel().getColumn(2).setResizable(false);
            jTable.getColumnModel().getColumn(3).setResizable(false);
            jTable.getColumnModel().getColumn(4).setResizable(false);
        }

        createLeagueBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        createLeagueBtn.setText("Create New League");
        createLeagueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createLeagueBtnActionPerformed(evt);
            }
        });

        manageMatchBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        manageMatchBtn.setText("Manage Match");
        manageMatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageMatchBtnActionPerformed(evt);
            }
        });

        addClubBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addClubBtn.setText("Add Club");
        addClubBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClubBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 776, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createLeagueBtn)
                        .addGap(18, 18, 18)
                        .addComponent(addClubBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(manageMatchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createLeagueBtn)
                    .addComponent(addClubBtn)
                    .addComponent(manageMatchBtn))
                .addGap(18, 18, 18)
                .addComponent(backBtn)
                .addContainerGap(200, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBtnActionPerformed

    private void createLeagueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createLeagueBtnActionPerformed
        // TODO add your handling code here:
        CreateLeagueJPanel panel = new CreateLeagueJPanel(container,system.getLeagueDirectory());      
        container.add("CreateLeagueJPanel",panel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container); 
    }//GEN-LAST:event_createLeagueBtnActionPerformed

    private void addClubBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClubBtnActionPerformed
        // TODO add your handling code here:
        int selectedrow = jTable.getSelectedRow();
        if(selectedrow >= 0)
        {
            League league = (League) jTable.getValueAt(selectedrow,1);
            if(league.getClubDirectory().getClubList().size()==0)
            {
                AddClubToLeagueJPanel panel = new AddClubToLeagueJPanel(container,system.getClubDirectory(),league);
                container.add("AddClubToLeagueJPanel",panel);
                CardLayout layout = (CardLayout) container.getLayout();
                layout.next(container);
            }
            else JOptionPane.showMessageDialog(null,"You have already add clubs to the league!","Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a league from the table first!","Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_addClubBtnActionPerformed

    private void manageMatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageMatchBtnActionPerformed
        // TODO add your handling code here:
        int selectedrow = jTable.getSelectedRow();
        if(selectedrow >= 0)
        {
           for(Organization organization: system.getOrganizationDirectory().getOrganizationList())
           {
             if (organization.getName().equals("Referee Organization"))
            {
              League league = (League) jTable.getValueAt(selectedrow,1);
              ManageMatchJPanel panel = new ManageMatchJPanel(container,organization,league);
              container.add("ManageMatchJPanel",panel);
              CardLayout layout = (CardLayout) container.getLayout();
              layout.next(container);
              break;
             }
           }
            
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select a league from the table first!","Warning", JOptionPane.WARNING_MESSAGE);
        }
      
    }//GEN-LAST:event_manageMatchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addClubBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createLeagueBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    private javax.swing.JButton manageMatchBtn;
    // End of variables declaration//GEN-END:variables

    
}
